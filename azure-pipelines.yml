# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: NodeContainerRegistry
    
- task: Docker@2
  displayName: Build
  inputs:
    command: build
    repository: jspipeline/node-service
    arguments: --target=build-env
    tags: |
      buildEnv
    
- task: Docker@2
  displayName: Test
  inputs:
    command: build
    repository: jspipeline/node-service
    arguments: --target=test-env
    tags: |
      test-env
    
- script: |
    export id=$(docker images --filter "label=test-results=true" -q | head -1)
    docker create --name testResultContainer $id
    docker cp testResultContainer:/app/results/TEST-RESULTS.xml ./
    docker cp testResultContainer:/app/coverage ./coverage
    docker rm testResultContainer
  displayName: 'Get Test Results and Coverage'
  
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/TEST-*.xml' 
    
- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    containerRegistry: NodeContainerRegistry
    
    
#steps:
#- task: NodeTool@0
#  inputs:
#    versionSpec: '10.x'
#  displayName: 'Install Node.js'
#
#- script: |
#    npm install
#    npm run build
#  displayName: 'npm install and build'
#  
#- task: PublishTestResults@2
#  inputs:
#    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
#    testResultsFiles: '**/TEST-*.xml' 
#    
#- task: PublishCodeCoverageResults@1
#  inputs: 
#    codeCoverageTool: Cobertura
#    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
#    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
